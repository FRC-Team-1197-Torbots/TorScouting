package scoutingapp;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Trogtor
 */


import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import java.awt.Font;
import javax.swing.JCheckBox;


public class PracticeFrame extends javax.swing.JFrame {

    int numTotes;
    int teamNumb;
    int matchNum;
    int autoPoints;
    int teleOpPoints;
    int foulPoints;
    int gamePoints;
    String name;
    int gateway;
    int moat;
    int drawbridge;
    int rockWall;
    int lowBar;
    int seeSaw;
    int ramparts;
    int door;
    int roughTerrain;
    int high;
    int low;
    int total;

    String notes;
    String yn;
    boolean capturePoints;
    boolean breachPoints;
    boolean climbingPoints;
    int breached;
    int captured;
    int climbed;
    int extraPoints;
    int totalUpdate;
    
    
    

    /**
     * Creates new form PracticeFrame
     */
    public PracticeFrame() {
        initComponents();
        teamNumb = -1;
        autoPoints = 0;
        teleOpPoints = 0;
        foulPoints = 0;
        gamePoints = 0;
        name = "";
        gateway = 0;
        moat = 0;
        drawbridge = 0;
        rockWall = 0;
        lowBar = 0;
        seeSaw = 0;
        ramparts = 0;
        door = 0;
        roughTerrain = 0;
        high = 0;
        low = 0;
        extraPoints = 0;
        climbed = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        textArea1 = new java.awt.TextArea();
        jDialog1 = new javax.swing.JDialog();
        InternalFrame = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        StandScout = new javax.swing.JLabel();
        auto = new javax.swing.JLabel();
        foul = new javax.swing.JLabel();
        tele = new javax.swing.JLabel();
        telePointCount = new javax.swing.JSpinner();
        autoPointCount = new javax.swing.JSpinner();
        foulPointCount = new javax.swing.JSpinner();
        autoScoring = new javax.swing.JLabel();
        seeSawTxt = new javax.swing.JLabel();
        moatTxt = new javax.swing.JLabel();
        drawbridgeTxt = new javax.swing.JLabel();
        rockWallTxt = new javax.swing.JLabel();
        moatCount = new javax.swing.JSpinner();
        drawbridgeCount = new javax.swing.JSpinner();
        teamNumTxt = new javax.swing.JTextField();
        theTeamNum = new javax.swing.JLabel();
        match = new javax.swing.JLabel();
        matchNumTxt = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        breach = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        totalCounting = new javax.swing.JLabel();
        calculated = new javax.swing.JTextField();
        Calculate = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        rampartsTxt = new javax.swing.JLabel();
        doorTxt = new javax.swing.JLabel();
        baselineTxt = new javax.swing.JLabel();
        roughtTerrainTxt = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        seeSawCount = new javax.swing.JSpinner();
        rampartsCount = new javax.swing.JSpinner();
        doorCount = new javax.swing.JSpinner();
        roughTerrainCount = new javax.swing.JSpinner();
        rockWallCount = new javax.swing.JSpinner();
        capture = new javax.swing.JCheckBox();
        totalPointCount = new javax.swing.JSpinner();
        capture1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InternalFrame.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.red, java.awt.Color.black));
        InternalFrame.setForeground(new java.awt.Color(255, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Autonomous Points:\n"
                + "\n"
                + "REACHING the BASELINE = 5 Points\n"
                + "3 FUEL in Low Efficiency GOAL = 1 Point and 1 kPa\n"
                + "1 FUEL in High Efficiency GOAL = 1 Point and 1 kPa\n"
                + "Each ROTOR Turning = 60 Points\n"
                + "\n"
                + "Tele-Op Points:\n"
                + "9 FUEL in Low Efficiency GOAL = 1 Point and 1 kPa\n"
                + "3 FUEL in High Efficiency GOAL = 1 Point and 1 kPa\n"
                + "Each ROTOR Turning = 40 Points\n"
                + "TOUCHPAD activated by a ROBOT = 50 Points\n"
                + "\n"
                + "All 4 ROTORS Turning = 1 RANKING Point (100 Points in Playoff Rounds)" + "\n"
                + "ALLIANCE meets or exceeds 40 kPa = 1 RANKING Point (20 Points in Playoff Rounds)"); // NOI18N
        jScrollPane1.setViewportView(jTextArea1);

        StandScout.setFont(new java.awt.Font("Tekton Pro", 1, 20)); // NOI18N
        StandScout.setText("Torbots Stand Scouting");
        StandScout.setToolTipText("");
        StandScout.setAlignmentX(0.5F);

        auto.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        auto.setText("Autonomous Points");
        auto.setToolTipText("");

        foul.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        foul.setText("Foul Points?");
        foul.setToolTipText("");

        tele.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        tele.setText("Tele-Op Points");
        tele.setToolTipText("");

        telePointCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        telePointCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        telePointCount.setToolTipText("");
        telePointCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                telePointCountFocusLost(evt);
            }
        });

        autoPointCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        autoPointCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        autoPointCount.setToolTipText("");
        autoPointCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                autoPointCountFocusLost(evt);
            }
        });

        foulPointCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        foulPointCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        foulPointCount.setToolTipText("");
        foulPointCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                foulPointCountFocusLost(evt);
            }
        });

        autoScoring.setFont(new java.awt.Font("Tekton Pro", 1, 14)); // NOI18N
        autoScoring.setText("Autonomous");
        autoScoring.setToolTipText("");

        seeSawTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        seeSawTxt.setText("See-Saw");
        seeSawTxt.setToolTipText("");

        moatTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        moatTxt.setText("Moat");
        moatTxt.setToolTipText("");

        drawbridgeTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        drawbridgeTxt.setText("Drawbridge");
        drawbridgeTxt.setToolTipText("");

        rockWallTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        rockWallTxt.setText("Rock Wall");
        rockWallTxt.setToolTipText("");

        moatCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        moatCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        moatCount.setToolTipText("");
        moatCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                moatCountFocusLost(evt);
            }
        });

        drawbridgeCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        drawbridgeCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        drawbridgeCount.setToolTipText("");
        drawbridgeCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                drawbridgeCountFocusLost(evt);
            }
        });

        teamNumTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        teamNumTxt.setToolTipText("");
        teamNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                teamNumTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                teamNumTxtFocusLost(evt);
            }
        });
        teamNumTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamNumTxtActionPerformed(evt);
            }
        });

        theTeamNum.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        theTeamNum.setText("Team #");
        theTeamNum.setToolTipText("");

        match.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        match.setText("Match #");
        match.setToolTipText("");

        matchNumTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        matchNumTxt.setToolTipText("");
        matchNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                matchNumTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                matchNumTxtFocusLost(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        breach.setFont(new java.awt.Font("Tekton Pro", 0, 16)); // NOI18N
        breach.setText("Breach?");
        breach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breachActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabel21.setText("Notes:");

        totalCounting.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        totalCounting.setText("Total Alliance Points");
        totalCounting.setToolTipText("");

        calculated.setEditable(false);
        calculated.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N

        Calculate.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Calculate.setText("Calculate Points");

        jButton1.setFont(new java.awt.Font("Tekton Pro", 0, 12)); // NOI18N
        jButton1.setText("Calculate");
        jButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton1FocusGained(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        jLabel30.setText("Scoring Info:");

        rampartsTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        rampartsTxt.setText("Ramparts");
        rampartsTxt.setToolTipText("");

        doorTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        doorTxt.setText("Door");
        doorTxt.setToolTipText("");

        baselineTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        baselineTxt.setText("Baseline");
        baselineTxt.setToolTipText("");

        roughtTerrainTxt.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        roughtTerrainTxt.setText("Rough Terrain");
        roughtTerrainTxt.setToolTipText("");

        jLabel35.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N

        seeSawCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        seeSawCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        seeSawCount.setToolTipText("");
        seeSawCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                seeSawCountFocusLost(evt);
            }
        });

        rampartsCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        rampartsCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        rampartsCount.setToolTipText("");
        rampartsCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rampartsCountFocusLost(evt);
            }
        });

        doorCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        doorCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        doorCount.setToolTipText("");
        doorCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                doorCountFocusLost(evt);
            }
        });

        roughTerrainCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        roughTerrainCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        roughTerrainCount.setToolTipText("");
        roughTerrainCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                roughTerrainCountFocusLost(evt);
            }
        });

        rockWallCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        rockWallCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, 8, 1));
        rockWallCount.setToolTipText("");
        rockWallCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                rockWallCountFocusLost(evt);
            }
        });

        capture.setFont(new java.awt.Font("Tekton Pro", 0, 16)); // NOI18N
        capture.setText("Capture?");
        capture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureActionPerformed(evt);
            }
        });

        totalPointCount.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
        totalPointCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        totalPointCount.setToolTipText("");
        totalPointCount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                totalPointCountFocusLost(evt);
            }
        });

        capture1.setFont(new java.awt.Font("Tekton Pro", 0, 16)); // NOI18N
        capture1.setText("Climbing?");
        capture1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capture1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 21)); // NOI18N
        jLabel1.setText("Overall Scoring for the Match");
        extra = new javax.swing.JTextArea();
        
                extra.setColumns(20);
                extra.setFont(new java.awt.Font("Tekton Pro", 0, 14)); // NOI18N
                extra.setRows(5);
                extra.setToolTipText("");
        
        JLabel label = new JLabel();
        label.setToolTipText("");
        label.setText("Tele-Op");
        label.setFont(new Font("Dialog", Font.BOLD, 14));
        
        JCheckBox baseline = new JCheckBox("Reached?");

        javax.swing.GroupLayout InternalFrameLayout = new javax.swing.GroupLayout(InternalFrame);
        InternalFrameLayout.setHorizontalGroup(
        	InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(InternalFrameLayout.createSequentialGroup()
        			.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(InternalFrameLayout.createSequentialGroup()
        					.addGap(192)
        					.addComponent(StandScout)
        					.addPreferredGap(ComponentPlacement.RELATED, 563, Short.MAX_VALUE)
        					.addComponent(jLabel30))
        				.addGroup(InternalFrameLayout.createSequentialGroup()
        					.addGap(28)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(InternalFrameLayout.createSequentialGroup()
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addGap(6)
        									.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        										.addComponent(theTeamNum)
        										.addComponent(teamNumTxt, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
        									.addGap(118)
        									.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        										.addComponent(matchNumTxt, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
        										.addComponent(match)))
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addComponent(Calculate)
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(calculated, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.UNRELATED)
        									.addComponent(jButton1)))
        							.addPreferredGap(ComponentPlacement.RELATED, 463, Short.MAX_VALUE))
        						.addGroup(InternalFrameLayout.createSequentialGroup()
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(jLabel1)
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addGap(598)
        									.addComponent(jLabel35))
        								.addComponent(saveButton, GroupLayout.PREFERRED_SIZE, 176, GroupLayout.PREFERRED_SIZE)
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(breach)
        									.addGap(18)
        									.addComponent(capture)
        									.addGap(18)
        									.addComponent(capture1))
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addGap(4)
        									.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        										.addComponent(autoScoring)
        										.addGroup(InternalFrameLayout.createSequentialGroup()
        											.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        												.addComponent(seeSawTxt)
        												.addComponent(seeSawCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        												.addComponent(baselineTxt)
        												.addComponent(baseline))
        											.addGap(42)
        											.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        												.addComponent(rampartsCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        												.addComponent(rampartsTxt)
        												.addComponent(moatCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        												.addComponent(moatTxt, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE))
        											.addGap(44)
        											.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        												.addComponent(drawbridgeTxt)
        												.addComponent(doorCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        												.addComponent(doorTxt)
        												.addComponent(drawbridgeCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
        											.addGap(46)
        											.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        												.addComponent(rockWallCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
        												.addComponent(rockWallTxt)
        												.addComponent(roughtTerrainTxt)
        												.addComponent(roughTerrainCount, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)))
        										.addComponent(label, GroupLayout.PREFERRED_SIZE, 88, GroupLayout.PREFERRED_SIZE))))
        							.addPreferredGap(ComponentPlacement.RELATED, 189, Short.MAX_VALUE))
        						.addGroup(InternalFrameLayout.createSequentialGroup()
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(autoPointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        								.addComponent(auto))
        							.addPreferredGap(ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(telePointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        								.addGroup(InternalFrameLayout.createSequentialGroup()
        									.addComponent(tele)
        									.addGap(76)
        									.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        										.addComponent(foulPointCount, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
        										.addComponent(foul))
        									.addGap(75)
        									.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        										.addComponent(totalCounting)
        										.addComponent(totalPointCount, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE))))
        							.addGap(214)))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jLabel21)))
        			.addGap(0)
        			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 567, GroupLayout.PREFERRED_SIZE)
        				.addComponent(extra, GroupLayout.PREFERRED_SIZE, 567, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        );
        InternalFrameLayout.setVerticalGroup(
        	InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(InternalFrameLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING, false)
        				.addGroup(InternalFrameLayout.createSequentialGroup()
        					.addComponent(StandScout)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jLabel35)
        					.addGap(13)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(theTeamNum)
        						.addComponent(match))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(teamNumTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(matchNumTxt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addGap(32)
        					.addComponent(autoScoring)
        					.addGap(18)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(baselineTxt)
        						.addComponent(moatTxt)
        						.addComponent(rockWallTxt)
        						.addComponent(drawbridgeTxt))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        						.addComponent(moatCount, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(rockWallCount, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(drawbridgeCount, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        						.addComponent(baseline))
        					.addGap(18)
        					.addComponent(label, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)
        					.addGap(19)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(seeSawTxt)
        						.addComponent(rampartsTxt)
        						.addComponent(doorTxt)
        						.addComponent(roughtTerrainTxt))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(InternalFrameLayout.createSequentialGroup()
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        								.addComponent(seeSawCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        								.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        									.addComponent(rampartsCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        									.addComponent(doorCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        							.addGap(18)
        							.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        								.addComponent(capture)
        								.addComponent(capture1)
        								.addComponent(breach)))
        						.addComponent(roughTerrainCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 377, GroupLayout.PREFERRED_SIZE)
        					.addComponent(jLabel30)))
        			.addGap(18)
        			.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(InternalFrameLayout.createSequentialGroup()
        					.addComponent(extra, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(InternalFrameLayout.createParallelGroup(Alignment.LEADING)
        					.addGroup(InternalFrameLayout.createSequentialGroup()
        						.addComponent(jLabel21)
        						.addContainerGap())
        					.addGroup(InternalFrameLayout.createSequentialGroup()
        						.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addGap(333))
        					.addGroup(InternalFrameLayout.createSequentialGroup()
        						.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(Calculate)
        							.addComponent(calculated, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
        						.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addComponent(jLabel1)
        						.addGap(21)
        						.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(auto, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
        							.addComponent(tele)
        							.addComponent(foul)
        							.addComponent(totalCounting))
        						.addPreferredGap(ComponentPlacement.RELATED)
        						.addGroup(InternalFrameLayout.createParallelGroup(Alignment.BASELINE)
        							.addComponent(foulPointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(telePointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(autoPointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        							.addComponent(totalPointCount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        						.addGap(85)
        						.addComponent(saveButton, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
        						.addGap(26)))))
        );
        InternalFrame.setLayout(InternalFrameLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InternalFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InternalFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void capture1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capture1ActionPerformed
        // TODO add your handling code here:
        if (capture1.isSelected()){
            climbed = 15;
        }
        else{
            climbed = 0;
        }
    }//GEN-LAST:event_capture1ActionPerformed

    private void totalPointCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_totalPointCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPointCountFocusLost

    private void captureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_captureActionPerformed

    private void rockWallCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rockWallCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_rockWallCountFocusLost

    private void roughTerrainCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roughTerrainCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_roughTerrainCountFocusLost

    private void doorCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_doorCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_doorCountFocusLost

    private void rampartsCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rampartsCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_rampartsCountFocusLost

    private void seeSawCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_seeSawCountFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_seeSawCountFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton1FocusGained
        // TODO add your handling code here:
        points();
    }//GEN-LAST:event_jButton1FocusGained

    private void breachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breachActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        points();
        setAllValues();
        makeCSV();
        clearForm();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void matchNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matchNumTxtFocusLost
        // TODO add your handling code here:
        try {
            matchNum = Integer.parseInt(matchNumTxt.getText());
        } catch (NumberFormatException e) {
            matchNumTxt.setText("Enter Valid Number");
        }
    }//GEN-LAST:event_matchNumTxtFocusLost

    private void matchNumTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_matchNumTxtFocusGained
        // TODO add your handling code here:
        matchNumTxt.setText("");
    }//GEN-LAST:event_matchNumTxtFocusGained

    private void teamNumTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamNumTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamNumTxtActionPerformed

    private void teamNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_teamNumTxtFocusLost
        // TODO add your handling code here:

        try {
            teamNumb = Integer.parseInt(teamNumTxt.getText());
        } catch (NumberFormatException e) {
            teamNumTxt.setText("Enter Valid Number");
        }

        //        String filename = "Team Number " + teamNumb + " " + name + ".txt";
        //        BufferedReader br = null;
        //        String text = "";
        //        String str;
        //        try {
            //
            //            br = new BufferedReader(new FileReader(filename));
            //            while ((str = br.readLine()) != null) {
                //                text += str + "\n";
                //                jTextArea3.setText(text);
                //            }
            //        } catch (FileNotFoundException e) {
            //            System.out.println("Fail");
            //        } catch (IOException e) {
            //        } finally {
            //            if (br != null) {
                //                try {
                    //                    br.close();
                    //                } catch (IOException e) {
                    //                }
                //            }
            //        }
    }//GEN-LAST:event_teamNumTxtFocusLost

    private void teamNumTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_teamNumTxtFocusGained
        // TODO add your handling code here:
        teamNumTxt.setText("");
    }//GEN-LAST:event_teamNumTxtFocusGained

    private void drawbridgeCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_drawbridgeCountFocusLost
        // TODO add your handling code here:
        drawbridge = Integer.parseInt(drawbridgeCount.getValue().toString());
    }//GEN-LAST:event_drawbridgeCountFocusLost

    private void moatCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moatCountFocusLost
        // TODO add your handling code here:
        moat = Integer.parseInt(moatCount.getValue().toString());
    }//GEN-LAST:event_moatCountFocusLost

    private void foulPointCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foulPointCountFocusLost
        // TODO add your handling code here:
        foulPoints = Integer.parseInt(foulPointCount.getValue().toString());
    }//GEN-LAST:event_foulPointCountFocusLost

    private void autoPointCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_autoPointCountFocusLost
        // TODO add your handling code here:
        autoPoints = Integer.parseInt(autoPointCount.getValue().toString());
    }//GEN-LAST:event_autoPointCountFocusLost

    private void telePointCountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telePointCountFocusLost
        // TODO add your handling code here:
        teleOpPoints = Integer.parseInt(telePointCount.getValue().toString());
    }//GEN-LAST:event_telePointCountFocusLost

    /**
     * @param args the command line arguments
     */
    public void setAllValues() {
        breachPoints = breach.isSelected();
        if (breach.isSelected()){
            breached = 20;
        }
        else{
            breached = 0;
        }
        capturePoints = capture.isSelected();
        if(capture.isSelected()){
            captured = 25;
        }
        else{
            captured = 0;
        }
        climbingPoints = capture1.isSelected();
        if (climbingPoints == true){
            yn = "Yes";
        }
        else{
            yn = "No";
        }

        
        teleOpPoints = Integer.parseInt(telePointCount.getValue().toString());
        autoPoints = Integer.parseInt(autoPointCount.getValue().toString());
        foulPoints = Integer.parseInt(foulPointCount.getValue().toString());
        total = Integer.parseInt(totalPointCount.getValue().toString());
        numTotes = gateway + moat + drawbridge + lowBar + ramparts + door + roughTerrain;
        gamePoints = teleOpPoints + autoPoints - foulPoints;
        
        extraPoints = breached + captured;
        notes = extra.getText();
    }

    public void points() {
        moat = (Integer.parseInt(moatCount.getValue().toString())) * 5;
        drawbridge = (Integer.parseInt(drawbridgeCount.getValue().toString())) * 5;
        rockWall = (Integer.parseInt(rockWallCount.getValue().toString())) * 5;
        seeSaw = (Integer.parseInt(seeSawCount.getValue().toString())) * 5;
        ramparts = (Integer.parseInt(rampartsCount.getValue().toString())) * 5;
        door = (Integer.parseInt(doorCount.getValue().toString())) * 5;
        roughTerrain = (Integer.parseInt(roughTerrainCount.getValue().toString())) * 5;
        totalUpdate = gateway + moat + drawbridge + rockWall + lowBar + seeSaw + ramparts + door + roughTerrain + high + low + climbed;
        calculated.setText(Integer.toUnsignedString(totalUpdate));
        calculated.update(calculated.getGraphics());
    }

    public void makeCSV() {
        String fileName = "Match " + matchNum + " " + teamNumb + ".csv";
        try {
            FileWriter writer = new FileWriter(fileName, true);
            writer.append("Match: " + matchNum + ", " + "Team #: " + teamNumb + ", " + "Autonomous Points: " + autoPoints + ", " + "Tele-Op Points: " + teleOpPoints
                    + "Foul Points: " + foulPoints + ", " + "Total Points: " + total + ", " + "Breach/Capture Points: " + extraPoints + ", " + "Climbing: " + yn + "\n"
                    + ", " + "Moat: " + Integer.parseInt(moatCount.getValue().toString()) + ", " + "Drawbridge: "
                    + Integer.parseInt(drawbridgeCount.getValue().toString()) + ", " + "Rock Wall: " + Integer.parseInt(rockWallCount.getValue().toString()) + ", " + ","
                    + "See-Saw: " + Integer.parseInt(seeSawCount.getValue().toString()) + ", " + "Ramparts: " + Integer.parseInt(rampartsCount.getValue().toString()) + ", " + "Door: "
                    + Integer.parseInt(doorCount.getValue().toString()) + ", " + "Rough Terrain: " + Integer.parseInt(roughTerrainCount.getValue().toString())
                    + "Total Points By themselves: " + totalUpdate + "\n" + notes + "\n");
            writer.flush();
            writer.close();
        } catch (IOException e) {
        }
    }

    public void run() {
        validate();
    }

    public void clearForm() {
        teamNumTxt.setText("");
        matchNumTxt.setText("");
        jTextArea1.setText("Autonomous Points:\n"
                + "\n"
                + "REACHING the BASELINE = 5 Points\n"
                + "3 FUEL in Low Efficiency GOAL = 1 Point and 1 kPa\n"
                + "1 FUEL in High Efficiency GOAL = 1 Point and 1 kPa\n"
                + "Each ROTOR Turning = 60 Points\n"
                + "\n"
                + "Tele-Op Points:\n"
                + "9 FUEL in Low Efficiency GOAL = 1 Point and 1 kPa\n"
                + "3 FUEL in High Efficiency GOAL = 1 Point and 1 kPa\n"
                + "Each ROTOR Turning = 40 Points\n"
                + "TOUCHPAD activated by a ROBOT = 50 Points\n"
                + "\n"
                + "All 4 ROTORS Turning = 1 RANKING Point (100 Points in Playoff Rounds)" + "\n"
                + "ALLIANCE meets or exceeds 40 kPa = 1 RANKING Point (20 Points in Playoff Rounds)");
        extra.setText(" ");
        //jTextArea3.setText(" ");
        saveButton.setText("Save");
        telePointCount.setValue(new Integer(0));
        autoPointCount.setValue(new Integer(0));
        foulPointCount.setValue(new Integer(0));
        moatCount.setValue(new Integer(0));
        drawbridgeCount.setValue(new Integer(0));
        rockWallCount.setValue(new Integer(0));
        seeSawCount.setValue(new Integer(0));
        rampartsCount.setValue(new Integer(0));
        doorCount.setValue(new Integer(0));
        roughTerrainCount.setValue(new Integer(0));
        breach.setSelected(false);
        capture.setSelected(false);
        calculated.setText("");
        totalUpdate = 0;
    }
    
    public void MainClass() {
    this.setTitle("Picture Application");
    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    JPanel panel1 = new JPanel();
    ImageIcon pic = new ImageIcon("Portcullis.png");
    panel1.add(new JLabel(pic));
    getContentPane().add(panel1);
    this.pack();
    this.setVisible(true);
  }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticeFrame().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Calculate;
    private javax.swing.JPanel InternalFrame;
    private javax.swing.JLabel StandScout;
    private javax.swing.JLabel auto;
    private javax.swing.JSpinner autoPointCount;
    private javax.swing.JCheckBox breach;
    private javax.swing.JTextField calculated;
    private javax.swing.JCheckBox capture;
    private javax.swing.JCheckBox capture1;
    private javax.swing.JLabel autoScoring;
    private javax.swing.JSpinner doorCount;
    private javax.swing.JLabel doorTxt;
    private javax.swing.JSpinner drawbridgeCount;
    private javax.swing.JLabel drawbridgeTxt;
    private javax.swing.JTextArea extra;
    private javax.swing.JLabel foul;
    private javax.swing.JSpinner foulPointCount;
    private javax.swing.JLabel baselineTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel match;
    private javax.swing.JTextField matchNumTxt;
    private javax.swing.JSpinner moatCount;
    private javax.swing.JLabel moatTxt;
    private javax.swing.JSpinner rampartsCount;
    private javax.swing.JLabel rampartsTxt;
    private javax.swing.JSpinner rockWallCount;
    private javax.swing.JLabel rockWallTxt;
    private javax.swing.JSpinner roughTerrainCount;
    private javax.swing.JLabel roughtTerrainTxt;
    private javax.swing.JButton saveButton;
    private javax.swing.JSpinner seeSawCount;
    private javax.swing.JLabel seeSawTxt;
    private javax.swing.JTextField teamNumTxt;
    private javax.swing.JLabel tele;
    private javax.swing.JSpinner telePointCount;
    private java.awt.TextArea textArea1;
    private javax.swing.JLabel theTeamNum;
    private javax.swing.JLabel totalCounting;
    private javax.swing.JSpinner totalPointCount;
}
